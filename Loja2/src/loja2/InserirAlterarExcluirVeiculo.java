package loja2;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



public class InserirAlterarExcluirVeiculo extends javax.swing.JFrame {

    public Connection con;
    DefaultTableModel model;
    private int codigo;
    
    public InserirAlterarExcluirVeiculo() {
        initComponents();
        ConectarDireto();
        setLocationRelativeTo(null);
        setIcon();
        model = ((DefaultTableModel) jTVeiculos.getModel());
        consultar();
        listarMarca();
        listarModelo();        
    }
    
    
    public Boolean conectado = false;

    public void ConectarDireto() {
        String msg = "";
        if (conectado == false) {
            try {
                Class.forName("org.firebirdsql.jdbc.FBDriver");
                con = DriverManager.getConnection("jdbc:firebirdsql:localhost:C:/Users/LUCAS/Documents/Bancos/LOJA3.FDB",
                        "SYSDBA", "masterkey");
                con.setAutoCommit(true);
                msg = "Conectado Firebird!";
                //JOptionPane.showMessageDialog(null,"Conectado Firebird");
                conectado = true;
            } catch (Exception e) {
                conectado = false;
                msg = "Houve um erro de conexão Firebird: " + e.getMessage();
                //System.out.println(e);
            }
        }
        System.out.println(msg);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLMarca = new javax.swing.JLabel();
        jCBMarca = new javax.swing.JComboBox<>();
        jLModelo = new javax.swing.JLabel();
        jCBModelo = new javax.swing.JComboBox<>();
        jLAno = new javax.swing.JLabel();
        jFTFAno = new javax.swing.JFormattedTextField();
        jLPlaca = new javax.swing.JLabel();
        jLPortas = new javax.swing.JLabel();
        jLKilometragem = new javax.swing.JLabel();
        jFTFKilometragem = new javax.swing.JFormattedTextField();
        jLArcondicionado = new javax.swing.JLabel();
        jTFArcondicionado = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTVeiculos = new javax.swing.JTable();
        jBCancelar = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jBInserir = new javax.swing.JButton();
        jLCor = new javax.swing.JLabel();
        jTFCor = new javax.swing.JTextField();
        jFTFPortas = new javax.swing.JFormattedTextField();
        jLVeiculos = new javax.swing.JLabel();
        jFTFPlaca = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastrar/Alterar/Excluir Veículo");
        setResizable(false);

        jLMarca.setText("Marca:");

        jCBMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLModelo.setText("Modelo:");

        jCBModelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLAno.setText("Ano:");

        try {
            jFTFAno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLPlaca.setText("Placa:");

        jLPortas.setText("Portas:");

        jLKilometragem.setText("Kilometragem:");

        try {
            jFTFKilometragem.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLArcondicionado.setText("Ar Condicionado:");

        jTVeiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Marca", "Modelo", "Cor", "Ano", "Placa", "Portas", "Kilometragem", "Ar Condicionado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTVeiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTVeiculosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTVeiculos);

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBExcluir.setText("Excluir");
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBAlterar.setText("Alterar");
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBInserir.setText("Inserir");
        jBInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInserirActionPerformed(evt);
            }
        });

        jLCor.setText("Cor:");

        try {
            jFTFPortas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLVeiculos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLVeiculos.setText("Veículos Cadastrados:");

        try {
            jFTFPlaca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("???-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLKilometragem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFTFKilometragem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLAno)
                            .addComponent(jLMarca))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(235, 235, 235)
                                .addComponent(jLModelo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLArcondicionado)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jCBMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jFTFAno, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(55, 55, 55)
                                                .addComponent(jLPlaca)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jFTFPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFArcondicionado, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(jLPortas)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jFTFPortas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jLCor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFCor, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(224, 224, 224))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBInserir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBCancelar)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLVeiculos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLMarca)
                    .addComponent(jCBMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLModelo)
                    .addComponent(jCBModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLCor)
                    .addComponent(jTFCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLAno)
                    .addComponent(jFTFAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLPlaca)
                    .addComponent(jLPortas)
                    .addComponent(jFTFPortas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTFPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLKilometragem)
                    .addComponent(jFTFKilometragem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLArcondicionado)
                    .addComponent(jTFArcondicionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLVeiculos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInserirActionPerformed
        String marca = jCBMarca.getSelectedItem().toString();
        String modelo = jCBModelo.getSelectedItem().toString();
        String cor = jTFCor.getText();
        int ano = Integer.parseInt(jFTFAno.getText());
        String placa = jFTFPlaca.getText();
        int portas = Integer.parseInt(jFTFPortas.getText());
        int kilometragem = Integer.parseInt(jFTFKilometragem.getText());
        String arcondicionado = jTFArcondicionado.getText();
        
        cadastrarVeiculo(ano, placa, portas, kilometragem, cor, arcondicionado, marca, modelo);
        
        jCBMarca.setSelectedItem(null);
        jCBModelo.setSelectedItem(null);
        jTFCor.setText(null);
        jFTFAno.setText(null);
        jFTFPlaca.setText(null);
        jFTFPortas.setText(null);
        jFTFKilometragem.setText(null);
        jTFArcondicionado.setText(null);
        
        limpaTable();
        
        consultar();
        
        
    }//GEN-LAST:event_jBInserirActionPerformed

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        String marca = jCBMarca.getSelectedItem().toString();
        String modelo = jCBModelo.getSelectedItem().toString();
        String cor = jTFCor.getText();
        int ano = Integer.parseInt(jFTFAno.getText());
        String placa = jFTFPlaca.getText();
        int portas = Integer.parseInt(jFTFPortas.getText());
        int kilometragem = Integer.parseInt(jFTFKilometragem.getText());
        String arcondicionado = jTFArcondicionado.getText();
        
        alterarVeiculo(ano, placa, portas, kilometragem, cor, arcondicionado, marca, modelo);
        
        jCBMarca.setSelectedItem(null);
        jCBModelo.setSelectedItem(null);
        jTFCor.setText(null);
        jFTFAno.setText(null);
        jFTFPlaca.setText(null);
        jFTFPortas.setText(null);
        jFTFKilometragem.setText(null);
        jTFArcondicionado.setText(null);
        
        limpaTable();
        
        consultar();
    }//GEN-LAST:event_jBAlterarActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        int indicelinha = jTVeiculos.getSelectedRow();
        int codigo = Integer.parseInt(model.getValueAt(indicelinha, 0).toString());
        
        excluirVeiculo(codigo);
        
        jCBMarca.setSelectedItem(null);
        jCBModelo.setSelectedItem(null);
        jTFCor.setText(null);
        jFTFAno.setText(null);
        jFTFPlaca.setText(null);
        jFTFPortas.setText(null);
        jFTFKilometragem.setText(null);
        jTFArcondicionado.setText(null);
        
        limpaTable();
        
        consultar();
    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        new PaginaInicial().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jTVeiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTVeiculosMouseClicked
        int indicelinha = jTVeiculos.getSelectedRow();
        jCBMarca.setSelectedItem(jTVeiculos.getValueAt(indicelinha, 1).toString());
        jCBModelo.setSelectedItem(jTVeiculos.getValueAt(indicelinha, 2).toString());
        jTFCor.setText(jTVeiculos.getValueAt(indicelinha, 3).toString());
        jFTFAno.setText(jTVeiculos.getValueAt(indicelinha, 4).toString());
        jFTFPlaca.setText(jTVeiculos.getValueAt(indicelinha, 5).toString());
        jFTFPortas.setText(jTVeiculos.getValueAt(indicelinha, 6).toString());
        jFTFKilometragem.setText(jTVeiculos.getValueAt(indicelinha, 7).toString());
        jTFArcondicionado.setText(jTVeiculos.getValueAt(indicelinha, 8).toString());
        
        
        
    }//GEN-LAST:event_jTVeiculosMouseClicked

   
    
    public void consultar() {
        String query;
        try {
            query = "SELECT * FROM VEICULO";

            Statement st = (Statement) con.createStatement();

            ResultSet rs = st.executeQuery(query);
            if (rs != null) {
                while (rs.next()) {

                    codigo = rs.getInt("CODIGO");
                    String marca = rs.getString("MARCA");
                    String modelo = rs.getString("MODELO");
                    String cor = rs.getString("COR");
                    int ano = rs.getInt("ANO");
                    String placa = rs.getString("PLACA");
                    int portas = rs.getInt("PORTAS");
                    int kilometragem = rs.getInt("KILOMETRAGEM");
                    String arcondicionado = rs.getString("ARCONDICIONADO");
                   
                    
                    model.addRow(new Object[]{codigo, marca, modelo, cor, ano, placa, portas, kilometragem, arcondicionado});

                }
            }
        } catch (Exception e) {
        }
    }
    
    
    public void cadastrarVeiculo(int ano, String placa, int portas, int kilometragem, String cor, String arcondicionado,String marca, String modelo) {
        try {
                String query = "INSERT INTO VEICULO (ANO, PLACA, PORTAS, KILOMETRAGEM, COR, ARCONDICIONADO, MARCA, MODELO)"
                    + "values ('" + ano + "', '" + placa + "', '" + portas + "', '" + kilometragem + "', '" + cor + "', '" + arcondicionado + "', '" + marca + "', '" + modelo + "')";
            Statement st = (Statement) con.createStatement();
            int resultado = st.executeUpdate(query);
            if (resultado == 1) {
                JOptionPane.showMessageDialog(this, "Veículo cadastrado com sucesso!");
            }
            System.out.println(resultado);
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, e);
              System.out.println(e); 
        }
    }
    
    
    public void alterarVeiculo(int ano, String placa, int portas, int kilometragem, String cor, String arcondicionado,String marca, String modelo) {
        String query = null;
        try {
            query = "UPDATE VEICULO SET ANO='" + ano + "', PLACA='" + placa + "', PORTAS='" + portas + "', KILOMETRAGEM='" + kilometragem + "', COR='" + cor + "', ARCONDICIONADO='" + arcondicionado + "', MARCA='" + marca + "', MODELO='" + modelo + "' WHERE CODIGO="+codigo;

            Statement st = (Statement) con.createStatement();
            //st.setString(1,jTFNome.setText("NOME"));

            int resultado = st.executeUpdate(query);
            if (resultado == 1) {
                JOptionPane.showMessageDialog(this, "Dados do veiculo alterados com sucesso");
            }
            System.out.println(resultado);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(this, e);
            System.out.println("erro ao dar update "+query);
        }
    }
    
    
    public void excluirVeiculo(int codigo) {
        try {
            this.limpaTable();
            String menssagem = "Deseja realmente excluir o veículo?";
            String titulo = "Excluir Veículo";

            int opcao = JOptionPane.showConfirmDialog(null, menssagem, titulo, JOptionPane.YES_NO_OPTION);

            String query = "DELETE FROM VEICULO WHERE CODIGO=" + codigo;
            Statement st = (Statement) con.createStatement();
            int resultado = st.executeUpdate(query);

            if (opcao == JOptionPane.YES_OPTION) {
                if (resultado == 1) {
                    JOptionPane.showMessageDialog(null, "Veículo excluído com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao excluir veículo.");
                }
            }else if(opcao == JOptionPane.NO_OPTION) {
                
            }else {
                return;
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    
    
    
    
    
    
    public void listarMarca() {
        try {
            String query = "SELECT NOME FROM MARCA";//confirmar/homologar a conexão com o banco de dados
            Statement st = (Statement) con.createStatement(); //retorno da execução do comando SQL
            ResultSet rs = st.executeQuery(query);
            if (rs != null) { // Verifica se a query retornou algo
                //JOptionPane.showMessageDialog(null,"listar clientes no combo");
                while (rs.next()) {
                    jCBMarca.addItem(rs.getString("NOME"));
                    //jTFIdCliente.setText(rs.getString("id"));
                }
            }
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null,"listar clientes no combo");}
        }
    }
    
    
    public void listarModelo() {
        try {
            String query = "SELECT NOME FROM MODELO";//confirmar/homologar a conexão com o banco de dados
            Statement st = (Statement) con.createStatement(); //retorno da execução do comando SQL
            ResultSet rs = st.executeQuery(query);
            if (rs != null) { // Verifica se a query retornou algo
                //JOptionPane.showMessageDialog(null,"listar clientes no combo");
                while (rs.next()) {
                    jCBModelo.addItem(rs.getString("NOME"));
                    //jTFIdCliente.setText(rs.getString("id"));
                }
            }
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null,"listar clientes no combo");}
        }
    }
    
    
    public void limpaTable() {
        for (int linha = model.getRowCount() - 1; linha >= 0; linha--) {
            model.removeRow(linha);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InserirAlterarExcluirVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InserirAlterarExcluirVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InserirAlterarExcluirVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InserirAlterarExcluirVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InserirAlterarExcluirVeiculo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBInserir;
    private javax.swing.JComboBox<String> jCBMarca;
    private javax.swing.JComboBox<String> jCBModelo;
    private javax.swing.JFormattedTextField jFTFAno;
    private javax.swing.JFormattedTextField jFTFKilometragem;
    private javax.swing.JFormattedTextField jFTFPlaca;
    private javax.swing.JFormattedTextField jFTFPortas;
    private javax.swing.JLabel jLAno;
    private javax.swing.JLabel jLArcondicionado;
    private javax.swing.JLabel jLCor;
    private javax.swing.JLabel jLKilometragem;
    private javax.swing.JLabel jLMarca;
    private javax.swing.JLabel jLModelo;
    private javax.swing.JLabel jLPlaca;
    private javax.swing.JLabel jLPortas;
    private javax.swing.JLabel jLVeiculos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFArcondicionado;
    private javax.swing.JTextField jTFCor;
    private javax.swing.JTable jTVeiculos;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("LOGO1.png")));
    }

    
}
