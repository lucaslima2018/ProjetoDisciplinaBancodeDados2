package loja2;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

public class InserirAlterarExcluirLocacao extends javax.swing.JFrame {

    public Connection con;
    DefaultTableModel model;
    private int codigo;
    
    public InserirAlterarExcluirLocacao() {
        initComponents();
        ConectarDireto();
        setLocationRelativeTo(null);
        setIcon();
        model = ((DefaultTableModel) jTLocacao.getModel());
        consultar();
        listarNome();
        listarMarca();
        listarModelo();  
        listarPlaca();
    }
    
    
    public Boolean conectado = false;

    public void ConectarDireto() {
        String msg = "";
        if (conectado == false) {
            try {
                Class.forName("org.firebirdsql.jdbc.FBDriver");
                con = DriverManager.getConnection("jdbc:firebirdsql:localhost:C:/Users/LUCAS/Documents/Bancos/LOJA3.FDB",
                        "SYSDBA", "masterkey");
                con.setAutoCommit(true);
                msg = "Conectado Firebird!";
                //JOptionPane.showMessageDialog(null,"Conectado Firebird");
                conectado = true;
            } catch (Exception e) {
                conectado = false;
                msg = "Houve um erro de conexão Firebird: " + e.getMessage();
                //System.out.println(e);
            }
        }
        System.out.println(msg);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLDadosCliente = new javax.swing.JLabel();
        jLNome = new javax.swing.JLabel();
        jS1 = new javax.swing.JSeparator();
        jLDadosVeiculo = new javax.swing.JLabel();
        jLMarca = new javax.swing.JLabel();
        jCBMarca = new javax.swing.JComboBox<>();
        jLModelo = new javax.swing.JLabel();
        jCBModelo = new javax.swing.JComboBox<>();
        jLPlaca = new javax.swing.JLabel();
        jS2 = new javax.swing.JSeparator();
        jLDadosLocacao = new javax.swing.JLabel();
        jLDataLocacao = new javax.swing.JLabel();
        jFTFDataLocacao = new javax.swing.JFormattedTextField();
        jLHoraLocacao = new javax.swing.JLabel();
        jFTFHoraLocacao = new javax.swing.JFormattedTextField();
        jLDataDevolucao = new javax.swing.JLabel();
        jFTFDataDevolucao = new javax.swing.JFormattedTextField();
        jLHoraDevolucao = new javax.swing.JLabel();
        jFTFHoraDevolucao = new javax.swing.JFormattedTextField();
        jLSubtotal = new javax.swing.JLabel();
        jTFSubtotal = new javax.swing.JTextField();
        jLMulta = new javax.swing.JLabel();
        jTFMulta = new javax.swing.JTextField();
        jLTotal = new javax.swing.JLabel();
        jTFTotal = new javax.swing.JTextField();
        jCBPlaca = new javax.swing.JComboBox<>();
        jCBNome = new javax.swing.JComboBox<>();
        jBCancelar = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jBInserir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTLocacao = new javax.swing.JTable();
        jLLocacoes = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastrar/Alterar/Excluir Locação");
        setResizable(false);

        jLDadosCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLDadosCliente.setText("Dados do Cliente:");

        jLNome.setText("Nome:");

        jS1.setBackground(new java.awt.Color(0, 0, 0));
        jS1.setForeground(new java.awt.Color(0, 0, 0));

        jLDadosVeiculo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLDadosVeiculo.setText("Dados do Veículo:");

        jLMarca.setText("Marca:");

        jCBMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLModelo.setText("Modelo:");

        jCBModelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLPlaca.setText("Placa:");

        jS2.setBackground(new java.awt.Color(0, 0, 0));
        jS2.setForeground(new java.awt.Color(0, 0, 0));

        jLDadosLocacao.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLDadosLocacao.setText("Dados da Locação:");

        jLDataLocacao.setText("Data Locação:");

        try {
            jFTFDataLocacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLHoraLocacao.setText("Hora Locação:");

        try {
            jFTFHoraLocacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLDataDevolucao.setText("Data Devolução:");

        try {
            jFTFDataDevolucao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLHoraDevolucao.setText("Hora Devolução:");

        try {
            jFTFHoraDevolucao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLSubtotal.setText("Subtotal:");

        jLMulta.setText("Multa:");

        jTFMulta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFMultaFocusLost(evt);
            }
        });
        jTFMulta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFMultaKeyPressed(evt);
            }
        });

        jLTotal.setText("Total:");

        jCBPlaca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jCBNome.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBExcluir.setText("Excluir");
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBAlterar.setText("Alterar");
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBInserir.setText("Inserir");
        jBInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInserirActionPerformed(evt);
            }
        });

        jTLocacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Marca", "Modelo", "Placa", "Data Locação", "Hora Locação", "Data Devolução", "Hora Devolução", "Subtotal", "Multa", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTLocacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTLocacaoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTLocacao);

        jLLocacoes.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLLocacoes.setText("Locaçãoes Cadstradas:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jS1)
                    .addComponent(jS2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBInserir)
                        .addGap(18, 18, 18)
                        .addComponent(jBAlterar)
                        .addGap(18, 18, 18)
                        .addComponent(jBExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(jBCancelar))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLDataLocacao)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jFTFDataLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLDataDevolucao)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jFTFDataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(27, 27, 27))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLSubtotal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLMulta)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLHoraDevolucao)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jFTFHoraDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLHoraLocacao)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jFTFHoraLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTFMulta, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46)
                                        .addComponent(jLTotal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLDadosCliente)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBNome, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLDadosVeiculo)
                            .addComponent(jLDadosLocacao)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLMarca)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jLModelo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jLPlaca)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLLocacoes))
                        .addGap(0, 570, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLDadosCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLNome)
                    .addComponent(jCBNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jS1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLDadosVeiculo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLMarca)
                    .addComponent(jCBMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLModelo)
                    .addComponent(jCBModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLPlaca)
                    .addComponent(jCBPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jS2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLDadosLocacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDataLocacao)
                    .addComponent(jFTFDataLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLHoraLocacao)
                    .addComponent(jFTFHoraLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDataDevolucao)
                    .addComponent(jFTFDataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLHoraDevolucao)
                    .addComponent(jFTFHoraDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLSubtotal)
                    .addComponent(jTFSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLMulta)
                    .addComponent(jTFMulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLTotal)
                    .addComponent(jTFTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(jLLocacoes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInserirActionPerformed
        String nome = jCBNome.getSelectedItem().toString();
        String marca = jCBMarca.getSelectedItem().toString();
        String modelo = jCBModelo.getSelectedItem().toString();
        String placa = jCBPlaca.getSelectedItem().toString();
        String datalocacao = jFTFDataLocacao.getText();
        String horalocacao = jFTFHoraLocacao.getText();
        String datadevolucao = jFTFDataDevolucao.getText();
        String horadevolucao = jFTFHoraDevolucao.getText();
        float subtotal = Float.parseFloat(jTFSubtotal.getText());
        float multa = Float.parseFloat(jTFMulta.getText());
        float total = Float.parseFloat(jTFTotal.getText());
        
        
        cadastrarLocacao(datalocacao, horalocacao, datadevolucao, horadevolucao, subtotal, total, multa, nome, marca, modelo, placa);
        
        jCBNome.setSelectedItem(null);
        jCBMarca.setSelectedItem(null);
        jCBModelo.setSelectedItem(null);
        jCBPlaca.setSelectedItem(null);
        jFTFDataLocacao.setText(null);
        jFTFHoraLocacao.setText(null);
        jFTFDataDevolucao.setText(null);
        jFTFHoraDevolucao.setText(null);
        jTFSubtotal.setText(null);
        jTFMulta.setText(null);
        jTFTotal.setText(null);
        
        limpaTable();
        
        consultar();        
    }//GEN-LAST:event_jBInserirActionPerformed

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        String nome = jCBNome.getSelectedItem().toString();
        String marca = jCBMarca.getSelectedItem().toString();
        String modelo = jCBModelo.getSelectedItem().toString();
        String placa = jCBPlaca.getSelectedItem().toString();
        String datalocacao = jFTFDataLocacao.getText();
        String horalocacao = jFTFHoraLocacao.getText();
        String datadevolucao = jFTFDataDevolucao.getText();
        String horadevolucao = jFTFHoraDevolucao.getText();
        float subtotal = Float.parseFloat(jTFSubtotal.getText());
        float multa = Float.parseFloat(jTFMulta.getText());
        float total = Float.parseFloat(jTFTotal.getText());
        
        alterarLocacao(datalocacao, horalocacao, datadevolucao, horadevolucao, subtotal, total, multa, nome, marca, modelo, placa);
        
        jCBNome.setSelectedItem(null);
        jCBMarca.setSelectedItem(null);
        jCBModelo.setSelectedItem(null);
        jCBPlaca.setSelectedItem(null);
        jFTFDataLocacao.setText(null);
        jFTFHoraLocacao.setText(null);
        jFTFDataDevolucao.setText(null);
        jFTFHoraDevolucao.setText(null);
        jTFSubtotal.setText(null);
        jTFMulta.setText(null);
        jTFTotal.setText(null);
        
        limpaTable();
        
        consultar();   
    }//GEN-LAST:event_jBAlterarActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        int indicelinha = jTLocacao.getSelectedRow();
        int codigo = Integer.parseInt(model.getValueAt(indicelinha, 0).toString());
        
        excluirLocacao(codigo);
        
        jCBNome.setSelectedItem(null);
        jCBMarca.setSelectedItem(null);
        jCBModelo.setSelectedItem(null);
        jCBPlaca.setSelectedItem(null);
        jFTFDataLocacao.setText(null);
        jFTFHoraLocacao.setText(null);
        jFTFDataDevolucao.setText(null);
        jFTFHoraDevolucao.setText(null);
        jTFSubtotal.setText(null);
        jTFMulta.setText(null);
        jTFTotal.setText(null);
        
        limpaTable();
        
        consultar();   
    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jTLocacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTLocacaoMouseClicked
        int indicelinha = jTLocacao.getSelectedRow();
        jCBNome.setSelectedItem(jTLocacao.getValueAt(indicelinha, 1).toString());
        jCBMarca.setSelectedItem(jTLocacao.getValueAt(indicelinha, 2).toString());
        jCBModelo.setSelectedItem(jTLocacao.getValueAt(indicelinha, 3).toString());
        jCBPlaca.setSelectedItem(jTLocacao.getValueAt(indicelinha, 4).toString());
        jFTFDataLocacao.setText(jTLocacao.getValueAt(indicelinha, 5).toString());
        jFTFHoraLocacao.setText(jTLocacao.getValueAt(indicelinha, 6).toString());
        jFTFDataDevolucao.setText(jTLocacao.getValueAt(indicelinha, 7).toString());
        jFTFHoraDevolucao.setText(jTLocacao.getValueAt(indicelinha, 8).toString());
        jTFSubtotal.setText(jTLocacao.getValueAt(indicelinha, 9).toString());
        jTFMulta.setText(jTLocacao.getValueAt(indicelinha, 10).toString());
        jTFTotal.setText(jTLocacao.getValueAt(indicelinha, 11).toString());
    }//GEN-LAST:event_jTLocacaoMouseClicked

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        new PaginaInicial().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jTFMultaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFMultaKeyPressed
        int codigo = evt.getKeyCode();
        
        if(codigo == KeyEvent.VK_TAB){
         float subtotal = Float.parseFloat( jTFSubtotal.getText());
         float multa = Float.parseFloat( jTFMulta.getText());
         float total = Float.parseFloat( jTFTotal.getText()); 
         total = subtotal + multa;
                    
                
      }
    }//GEN-LAST:event_jTFMultaKeyPressed

    private void jTFMultaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFMultaFocusLost
        // TODO add your handling code here:
         float subtotal = Float.parseFloat( jTFSubtotal.getText());
         float multa = Float.parseFloat( jTFMulta.getText());
         float total = Float.parseFloat( jTFTotal.getText()); 
         total=subtotal + multa;
         jTFTotal.setText(String.valueOf(total));
    }//GEN-LAST:event_jTFMultaFocusLost

    
    public void consultar() {
        String query;
        try {
            query = "SELECT * FROM LOCACAO";

            Statement st = (Statement) con.createStatement();

            ResultSet rs = st.executeQuery(query);
            if (rs != null) {
                while (rs.next()) {

                    codigo = rs.getInt("CODIGO");
                    String dataloc = rs.getString("DATALOCACAO");
                    String datalocacao = convertData(dataloc, '-');
                    String horalocacao = rs.getString("HORA_LOCACAO");
                    String datadev = rs.getString("DATADEVOLUCA");
                    String datadevolucao = convertData(datadev, '-');
                    String horadevolucao = rs.getString("HORADEVOLUCAO");
                    float subtotal = rs.getFloat("SUBTOTAL");
                    float total = rs.getFloat("TOTAL");
                    float multa = rs.getFloat("MULTA");
                    String nome = rs.getString("NOME");
                    String marca = rs.getString("MARCA");
                    String modelo = rs.getString("MODELO");
                    String placa = rs.getString("PLACA");
                   
                   
                    
                    model.addRow(new Object[]{codigo, nome, marca, modelo, placa, datalocacao, horalocacao, datadevolucao, horadevolucao, subtotal, multa, total});

                }
            }
        } catch (Exception e) {
        }
    }
    
    
    public String convertData(String data, char simbolo) {
        ArrayList<String> x = new ArrayList<String>();
        //System.out.println(data+"\n");
        if (simbolo == '/') {
            x.addAll(Arrays.asList(data.split("/")));
            //System.out.println(x + "\n");
            data = x.get(2) + "-" + x.get(1) + "-" + x.get(0);//AAAA-MM-DD
            //System.out.println(data);
        } else if (simbolo == '-') {
            x.addAll(Arrays.asList(data.split("-")));
            //System.out.println(x + "\n");
            data = x.get(2) + "/" + x.get(1) + "/" + x.get(0);//DD-MM-AAAA
            //System.out.println(data); 
        } else {
            data = null;
        }
        return data;
    }
    
    
    public void cadastrarLocacao(String datalocacao, String horalocacao, String datadevolucao, String horadevolucao, float subtotal, float total, float multa, String nome, String marca, String modelo, String placa) {
              datalocacao = convertData(datalocacao, '/'); 
              datadevolucao = convertData(datadevolucao, '/'); 

        
        try {
                String query = "INSERT INTO LOCACAO (DATALOCACAO, HORA_LOCACAO, DATADEVOLUCA, HORADEVOLUCAO, SUBTOTAL, TOTAL, MULTA, NOME, MARCA, MODELO, PLACA)"
                    + "values ('" + datalocacao + "', '" + horalocacao + "', '" + datadevolucao + "', '" + horadevolucao + "', '" + subtotal + "', '" + total + "', '" + multa + "', '" + nome + "', '" + marca + "', '" + modelo + "', '" + placa + "')";
            Statement st = (Statement) con.createStatement();
            int resultado = st.executeUpdate(query);
            
            if (resultado == 1) {
                JOptionPane.showMessageDialog(this, "Locação cadastrada com sucesso!");
            }
            System.out.println(resultado);
            
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, e);
              System.out.println(e);
             
        }
    }
    
    
    public void alterarLocacao(String datalocacao, String horalocacao, String datadevolucao, String horadevolucao, float subtotal, float total, float multa, String nome, String marca, String modelo, String placa) {
        datalocacao = convertData(datalocacao, '/'); 
        datadevolucao = convertData(datadevolucao, '/');
        
        String query = null;
        try {
            query = "UPDATE LOCACAO SET DATALOCACAO='" + datalocacao + "', HORA_LOCACAO='" + horalocacao + "', DATADEVOLUCA='" + datadevolucao + "', HORADEVOLUCAO='" + horadevolucao + "', SUBTOTAL='" + subtotal + "', TOTAL='" + total + "', MULTA='" + multa + "', NOME='" + nome + "', MARCA='" + marca + "', MODELO='" + modelo + "', PLACA='" + placa + "' WHERE CODIGO="+codigo;

            Statement st = (Statement) con.createStatement();
            //st.setString(1,jTFNome.setText("NOME"));

            int resultado = st.executeUpdate(query);
            if (resultado == 1) {
                JOptionPane.showMessageDialog(this, "Dados da locação alterados com sucesso");
            }
            System.out.println(resultado);
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(this, e);
            System.out.println(e);
        }
    }
    
    
    public void excluirLocacao(int codigo) {
        try {
            this.limpaTable();
            String menssagem = "Deseja realmente excluir a locação?";
            String titulo = "Excluir Locação";

            int opcao = JOptionPane.showConfirmDialog(null, menssagem, titulo, JOptionPane.YES_NO_OPTION);

            String query = "DELETE FROM LOCACAO WHERE CODIGO=" + codigo;
            Statement st = (Statement) con.createStatement();
            int resultado = st.executeUpdate(query);

            if (opcao == JOptionPane.YES_OPTION) {
                if (resultado == 1) {
                    JOptionPane.showMessageDialog(null, "Locação excluída com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao excluir locação.");
                }
            }else {
                return;
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    
    public void listarMarca() {
        try {
            String query = "SELECT NOME FROM MARCA";//confirmar/homologar a conexão com o banco de dados
            Statement st = (Statement) con.createStatement(); //retorno da execução do comando SQL
            ResultSet rs = st.executeQuery(query);
            if (rs != null) { // Verifica se a query retornou algo
                //JOptionPane.showMessageDialog(null,"listar clientes no combo");
                while (rs.next()) {
                    jCBMarca.addItem(rs.getString("NOME"));
                    //jTFIdCliente.setText(rs.getString("id"));
                    //System.out.println(query);
                }
            }
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null,"listar clientes no combo");}
        }
    }
    
    
    public void listarModelo() {
        try {
            String query = "SELECT NOME FROM MODELO";//confirmar/homologar a conexão com o banco de dados
            Statement st = (Statement) con.createStatement(); //retorno da execução do comando SQL
            ResultSet rs = st.executeQuery(query);
            if (rs != null) { // Verifica se a query retornou algo
                //JOptionPane.showMessageDialog(null,"listar clientes no combo");
                while (rs.next()) {
                    jCBModelo.addItem(rs.getString("NOME"));
                    //jTFIdCliente.setText(rs.getString("id"));
                }
            }
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null,"listar clientes no combo");}
        }
    }
    
    
    public void listarNome() {
        try {
            String query = "SELECT NOME FROM CLIENTE";//confirmar/homologar a conexão com o banco de dados
            Statement st = (Statement) con.createStatement(); //retorno da execução do comando SQL
            ResultSet rs = st.executeQuery(query);
            if (rs != null) { // Verifica se a query retornou algo
                //JOptionPane.showMessageDialog(null,"listar clientes no combo");
                while (rs.next()) {
                    jCBNome.addItem(rs.getString("NOME"));
                    //jTFIdCliente.setText(rs.getString("id"));
                }
            }
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null,"listar clientes no combo");}
        }
    }
    
    
    public void listarPlaca() {
        try {
            String query = "SELECT PLACA FROM VEICULO";//confirmar/homologar a conexão com o banco de dados
            Statement st = (Statement) con.createStatement(); //retorno da execução do comando SQL
            ResultSet rs = st.executeQuery(query);
            if (rs != null) { // Verifica se a query retornou algo
                //JOptionPane.showMessageDialog(null,"listar clientes no combo");
                while (rs.next()) {
                    jCBPlaca.addItem(rs.getString("PLACA"));
                    //jTFIdCliente.setText(rs.getString("id"));
                }
            }
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null,"listar clientes no combo");}
        }
    }   
    
    
    public void limpaTable() {
        for (int linha = model.getRowCount() - 1; linha >= 0; linha--) {
            model.removeRow(linha);
        }
    }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InserirAlterarExcluirLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InserirAlterarExcluirLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InserirAlterarExcluirLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InserirAlterarExcluirLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InserirAlterarExcluirLocacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBInserir;
    private javax.swing.JComboBox<String> jCBMarca;
    private javax.swing.JComboBox<String> jCBModelo;
    private javax.swing.JComboBox<String> jCBNome;
    private javax.swing.JComboBox<String> jCBPlaca;
    private javax.swing.JFormattedTextField jFTFDataDevolucao;
    private javax.swing.JFormattedTextField jFTFDataLocacao;
    private javax.swing.JFormattedTextField jFTFHoraDevolucao;
    private javax.swing.JFormattedTextField jFTFHoraLocacao;
    private javax.swing.JLabel jLDadosCliente;
    private javax.swing.JLabel jLDadosLocacao;
    private javax.swing.JLabel jLDadosVeiculo;
    private javax.swing.JLabel jLDataDevolucao;
    private javax.swing.JLabel jLDataLocacao;
    private javax.swing.JLabel jLHoraDevolucao;
    private javax.swing.JLabel jLHoraLocacao;
    private javax.swing.JLabel jLLocacoes;
    private javax.swing.JLabel jLMarca;
    private javax.swing.JLabel jLModelo;
    private javax.swing.JLabel jLMulta;
    private javax.swing.JLabel jLNome;
    private javax.swing.JLabel jLPlaca;
    private javax.swing.JLabel jLSubtotal;
    private javax.swing.JLabel jLTotal;
    private javax.swing.JSeparator jS1;
    private javax.swing.JSeparator jS2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFMulta;
    private javax.swing.JTextField jTFSubtotal;
    private javax.swing.JTextField jTFTotal;
    private javax.swing.JTable jTLocacao;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("LOGO1.png")));
    }

    
}
